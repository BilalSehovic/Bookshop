// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250808090623_SeedBooks")]
    partial class SeedBooks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9e5d8d6b-3e1a-4d82-84f1-f5b86e7a95c4"),
                            Author = "J.R.R. Tolkien",
                            Isbn = "978-0547928227",
                            Price = 9.9900000000000002,
                            StockQuantity = 0,
                            Title = "The Hobbit"
                        },
                        new
                        {
                            Id = new Guid("5a3df3e4-bcc4-4b17-a0b6-4c1c98c3f4f7"),
                            Author = "George Orwell",
                            Isbn = "978-0451524935",
                            Price = 7.9900000000000002,
                            StockQuantity = 0,
                            Title = "1984"
                        },
                        new
                        {
                            Id = new Guid("b31f1f26-1420-4c54-a25f-d344bb8a7e23"),
                            Author = "Harper Lee",
                            Isbn = "978-0061120084",
                            Price = 8.4900000000000002,
                            StockQuantity = 0,
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            Id = new Guid("73ff9fd9-4f2e-4d7c-a67e-56a13f3b5876"),
                            Author = "Jane Austen",
                            Isbn = "978-1503290563",
                            Price = 6.9900000000000002,
                            StockQuantity = 0,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = new Guid("f0cb6c6d-bb65-4a88-9d3c-54f3a58dd8bb"),
                            Author = "F. Scott Fitzgerald",
                            Isbn = "978-0743273565",
                            Price = 7.4900000000000002,
                            StockQuantity = 0,
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            Id = new Guid("e23e9eaf-4cb5-43a6-a7a4-08ffb6432781"),
                            Author = "Herman Melville",
                            Isbn = "978-1503280786",
                            Price = 10.99,
                            StockQuantity = 0,
                            Title = "Moby-Dick"
                        },
                        new
                        {
                            Id = new Guid("c7d0f9c6-9c71-4370-bf54-93b47c987edf"),
                            Author = "Leo Tolstoy",
                            Isbn = "978-1400079988",
                            Price = 12.99,
                            StockQuantity = 0,
                            Title = "War and Peace"
                        },
                        new
                        {
                            Id = new Guid("6b1894a2-71cb-4a85-815b-c245b53c7923"),
                            Author = "Fyodor Dostoevsky",
                            Isbn = "978-0486415871",
                            Price = 11.49,
                            StockQuantity = 0,
                            Title = "Crime and Punishment"
                        },
                        new
                        {
                            Id = new Guid("d8b42b6a-5bc5-4e9b-ae0c-bdcd02c6c8b2"),
                            Author = "J.D. Salinger",
                            Isbn = "978-0316769488",
                            Price = 8.9900000000000002,
                            StockQuantity = 0,
                            Title = "The Catcher in the Rye"
                        },
                        new
                        {
                            Id = new Guid("4453c2c5-f2df-46c0-b3d4-482f7b37602e"),
                            Author = "Aldous Huxley",
                            Isbn = "978-0060850524",
                            Price = 7.8899999999999997,
                            StockQuantity = 0,
                            Title = "Brave New World"
                        },
                        new
                        {
                            Id = new Guid("f6332d83-5ed3-41f2-bc4b-5f93c97a3e07"),
                            Author = "J.R.R. Tolkien",
                            Isbn = "978-0618640157",
                            Price = 14.99,
                            StockQuantity = 0,
                            Title = "The Lord of the Rings"
                        },
                        new
                        {
                            Id = new Guid("8c276e4b-b1a0-4e72-b15f-f8b9b2e6fd72"),
                            Author = "J.K. Rowling",
                            Isbn = "978-0590353427",
                            Price = 9.4900000000000002,
                            StockQuantity = 0,
                            Title = "Harry Potter and the Sorcerer's Stone"
                        },
                        new
                        {
                            Id = new Guid("20a6ec6e-d4d8-4ff1-8e19-3ff0c67dc8ec"),
                            Author = "C.S. Lewis",
                            Isbn = "978-0066238500",
                            Price = 8.7899999999999991,
                            StockQuantity = 0,
                            Title = "The Chronicles of Narnia"
                        },
                        new
                        {
                            Id = new Guid("c771cf23-9a6d-4e77-8f8f-1f58692eb3a7"),
                            Author = "Leo Tolstoy",
                            Isbn = "978-0143035008",
                            Price = 11.99,
                            StockQuantity = 0,
                            Title = "Anna Karenina"
                        },
                        new
                        {
                            Id = new Guid("b0c85cb0-6041-40d4-a0d0-3df4d9e0c733"),
                            Author = "Paulo Coelho",
                            Isbn = "978-0061122415",
                            Price = 8.2899999999999991,
                            StockQuantity = 0,
                            Title = "The Alchemist"
                        },
                        new
                        {
                            Id = new Guid("3f84bb7a-2eb5-4a21-bb16-74af4f16fbbf"),
                            Author = "Victor Hugo",
                            Isbn = "978-0451419439",
                            Price = 12.49,
                            StockQuantity = 0,
                            Title = "Les Misérables"
                        },
                        new
                        {
                            Id = new Guid("e78a8c29-9382-4d53-b5cb-8265f8b2a27f"),
                            Author = "Bram Stoker",
                            Isbn = "978-0486411095",
                            Price = 7.1900000000000004,
                            StockQuantity = 0,
                            Title = "Dracula"
                        },
                        new
                        {
                            Id = new Guid("9df23a68-8b7e-43b3-a7f2-fb32cb0f89f3"),
                            Author = "Mary Shelley",
                            Isbn = "978-0486282114",
                            Price = 6.8899999999999997,
                            StockQuantity = 0,
                            Title = "Frankenstein"
                        },
                        new
                        {
                            Id = new Guid("b0af9fd1-3a8e-4ef4-90aa-2f86b1c34f66"),
                            Author = "Khaled Hosseini",
                            Isbn = "978-1594631931",
                            Price = 9.1899999999999995,
                            StockQuantity = 0,
                            Title = "The Kite Runner"
                        },
                        new
                        {
                            Id = new Guid("d6b2df6f-52d4-4098-9957-6cb8ce00c9a5"),
                            Author = "Charles Dickens",
                            Isbn = "978-1503219700",
                            Price = 8.5899999999999999,
                            StockQuantity = 0,
                            Title = "A Tale of Two Cities"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomerName")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("double precision");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Sale", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });
#pragma warning restore 612, 618
        }
    }
}
